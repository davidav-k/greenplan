name: greenplan



services:
  db:
    image: pgvector/pgvector:pg16
    container_name: gp-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-greenplan}
      POSTGRES_USER: ${POSTGRES_USER:-gp_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-gp_pass}
    ports:
      - "${DB_PORT:-5532}:5432"
    volumes:
      - ./infrastructure/db/data:/var/lib/postgresql/data
      - ./infrastructure/db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - gp_net


  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z-cpuv1
    container_name: gp-minio
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - ./infrastructure/minio/data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - gp_net

  ollama:
    image: ollama/ollama:latest
    container_name: gp-ollama
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    environment:
      OLLAMA_NUM_THREADS: ${OLLAMA_NUM_THREADS:-4}
      OLLAMA_KEEP_ALIVE: ${OLLAMA_KEEP_ALIVE:-5m}
    volumes:
      - ./infrastructure/ollama:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:11434/api/tags"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - gp_net
#    entrypoint: >
#      /bin/sh -c "
#        ollama serve &
#        sleep 2 &&
#        ollama pull qwen2.5:7b-instruct &&
#        ollama pull mxbai-embed-large &&
#        wait
#      "

  api:
    build:
      context: ./backend
      dockerfile: modules/app/Dockerfile
    container_name: gp-api
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      DB_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-greenplan}
      DB_USER: ${POSTGRES_USER:-gp_user}
      DB_PASS: ${POSTGRES_PASSWORD:-gp_pass}
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_BUCKET: ${MINIO_BUCKET:-greenplan}
      OLLAMA_BASE_URL: http://ollama:11434
      OLLAMA_EMBED_MODEL: ${EMBED_MODEL:-mxbai-embed-large}
      CLOUD_LLM_MODEL: ${CLOUD_LLM_MODEL:-gpt-4o-mini}
      CLOUD_LLM_BASE_URL: ${CLOUD_LLM_BASE_URL:-https://api.openai.com/v1}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-changeme}
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      ollama:
        condition: service_healthy
    ports:
      - "${API_PORT:-8181}:8181"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - gp_net

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: gp-frontend
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      SERVER_PORT: ${FRONTEND_PORT:-8081}
    ports:
      - "${FRONTEND_PORT:-8081}:8081"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gp_net

volumes:
  db_data:
  minio_data:
  ollama_data:

networks:
  gp_net:
    driver: bridge
